// src/model/color.rs

use mongodb::bson::{
    oid::ObjectId, // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö _id
    DateTime,      // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö timestamps
};
use serde::{Deserialize, Serialize};

// üöÄ Struct ‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Color Model
#[derive(Debug, Serialize, Deserialize, Clone)]
pub struct Color {
    // 1. _id
    #[serde(rename = "_id", skip_serializing_if = "Option::is_none")]
    pub id: Option<ObjectId>,

    // 2. name (String, required: true)
    pub name: String,

    // 3. code (String)
    #[serde(skip_serializing_if = "Option::is_none")]
    pub code: Option<String>, // ‡πÉ‡∏ä‡πâ Option ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô null/undefined

    // 4. hex (String)
    #[serde(skip_serializing_if = "Option::is_none")]
    pub hex: Option<String>, // ‡πÉ‡∏ä‡πâ Option ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô null/undefined

    // 5. multiple (Boolean, default: false)
    // #[serde(default)] ‡∏à‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Ñ‡πà‡∏≤ default ‡πÄ‡∏õ‡πá‡∏ô false ‡∏´‡∏≤‡∏Å Field ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô DB
    #[serde(default)]
    pub multiple: bool,

    // 6. clearColor (Boolean, default: false)
    #[serde(default)]
    pub clear_color: bool, // ‡πÉ‡∏ä‡πâ snake_case ‡∏ï‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏Å Rust

    // 7. user (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ColorSchema.plugin(withUser))
    // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤‡πÄ‡∏Å‡πá‡∏ö User ID/Username ‡πÄ‡∏õ‡πá‡∏ô String
    pub user: String,

    // 8. timestamps (timestamps: true)
    // #[serde(rename = "createdAt", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<DateTime>,

    // #[serde(rename = "updatedAt", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<DateTime>,
}
